name: CI/CD for Weather Application

on:
  push:
    branches:
      - main
    paths:
      - 'weather-app/**'
      - '.github/workflows/weather-app-ci-cd.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'weather-app/**'
      - '.github/workflows/weather-app-ci-cd.yml'

permissions:
  id-token: write
  contents: read
  pull-requests: write
  packages: write

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_ACCESS_KEY: "${{ secrets.ARM_ACCESS_KEY }}"

jobs:
  build-and-push-docker:
    name: 'Build & Push Docker Image'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./weather-app
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }}

  deploy-to-aks:
    name: 'Deploy to AKS - ${{ matrix.environment }}' # Make job name distinct for matrix
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    strategy:
      matrix:
        environment: [test, production]
    environment: ${{ matrix.environment }} # This still works for GitHub Environment features

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Terraform Init for Test Environment (on PR)
      - name: Terraform Init for Test
        if: github.event_name == 'pull_request' && matrix.environment == 'test'
        run: terraform init
        working-directory: terraform/environments/test
        env:
          ARM_SKIP_PROVIDER_REGISTRATION: true

      # Deploy to Test Environment (on PR)
      - name: Deploy to AKS (Test)
        if: github.event_name == 'pull_request' && matrix.environment == 'test'
        run: terraform apply -auto-approve
        working-directory: terraform/environments/test
        env:
          TF_VAR_app_image_tag: ${{ github.sha }}

      # Terraform Init for Production Environment (on Push)
      - name: Terraform Init for Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.environment == 'production'
        run: terraform init
        working-directory: terraform/environments/production
        env:
          ARM_SKIP_PROVIDER_REGISTRATION: true

      # Deploy to Production Environment (on Push)
      - name: Deploy to AKS (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.environment == 'production'
        run: terraform apply -auto-approve
        working-directory: terraform/environments/production
        env:
          TF_VAR_app_image_tag: ${{ github.sha }}